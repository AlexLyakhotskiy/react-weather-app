{"version":3,"sources":["components/SliderInput/SliderInput.module.scss","components/Searchbar/Searchbar.js","components/SliderInput/SliderInput.js","components/ListItem/ListItem.js","utils/apiServices.js","utils/functions.js","components/App/App.js","index.js","components/ListItem/ListItem.module.scss","components/Searchbar/Searchbar.module.scss","components/App/App.module.scss"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","className","styles","SearchForm","type","SearchFormButton","SearchFormButtonLabel","onChange","target","value","toLowerCase","SearchFormInput","name","autoComplete","SliderInput","input","Number","min","max","step","ListItem","data","all","clouds","coord","lat","lon","main","temp","temp_min","temp_max","pressure","country","sys","weather","speed","wind","description","icon","item","imgWrapper","src","alt","textWrapper","title","weatherText","coords","API_KEY","BASE_URL","fetchData","url","a","axios","get","Error","tempColorData","getColorFromTemp","percent","getPercentFromTwoTemp","mixTwoHexColor","firstColor","secondColor","firstRgb","getRgbArrFromHexColor","secondRgb","result","i","length","mixedRgb","mixedHex","Math","floor","toString","padStart","push","join","hex","slice","match","map","parseInt","minTemp","currentTemp","App","temparature","setTemparature","weatherIcon","setWeatherIcon","query","setQuery","countryData","setCountryData","useGeolocation","latitude","longitude","useEffect","console","log","trim","cityName","list","mainCenter","style","backgroundColor","imageWrapper","id","ReactDOM","render","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,MAAQ,6B,qJCgCXC,MA7Bf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAWA,OACE,uBAAMH,SANa,SAAAI,GACnBA,EAAEC,iBACFL,EAASE,IAIqBI,UAAWC,IAAOC,WAAhD,UACE,wBAAQC,KAAK,SAASH,UAAWC,IAAOG,iBAAxC,SACE,sBAAMJ,UAAWC,IAAOI,sBAAxB,sBAEF,uBACEC,SAfgB,SAAAR,GACpBD,EAAeC,EAAES,OAAOC,MAAMC,gBAe1BD,MAAOZ,EACPI,UAAWC,IAAOS,gBAClBC,KAAK,cACLR,KAAK,OACLS,aAAa,Y,iBCvBN,SAASC,EAAT,GAA2C,IAApBL,EAAmB,EAAnBA,MAAOF,EAAY,EAAZA,SAC3C,OACE,uBACEN,UAAWC,IAAOa,MAClBX,KAAK,QACLQ,KAAK,cACLH,MAAOA,EACPF,SAAU,SAAAR,GAAC,OAAIQ,EAASS,OAAOjB,EAAES,OAAOC,SACxCQ,IAAI,MACJC,IAAI,KACJC,KAAK,M,oBCVI,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAE/BT,EAOES,EAPFT,KACUU,EAMRD,EANFE,OAAUD,IAFZ,EAQID,EALFG,MAASC,EAHX,EAGWA,IAAKC,EAHhB,EAGgBA,IAHhB,EAQIL,EAJFM,KAAQC,EAJV,EAIUA,KAAMC,EAJhB,EAIgBA,SAAUC,EAJ1B,EAI0BA,SAAUC,EAJpC,EAIoCA,SAC3BC,EAGLX,EAHFY,IAAOD,QACPE,EAEEb,EAFFa,QACQC,EACNd,EADFe,KAAQD,MAEV,EAA8BD,EAAQ,GAA9BG,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAErB,OACE,qBAAIrC,UAAWC,IAAOqC,KAAtB,UACE,qBAAKtC,UAAWC,IAAOsC,WAAvB,SACE,qBACEC,IAAG,4CAAuCH,EAAvC,WACHI,IAAI,eACJzC,UAAU,OAGd,sBAAKA,UAAWC,IAAOyC,YAAvB,UACE,oBAAG1C,UAAWC,IAAO0C,MAArB,UACGhC,EADH,KACWoB,EADX,IACqBK,KAErB,oBAAGpC,UAAWC,IAAO2C,YAArB,UACGjB,EADH,qBAC2BC,EAD3B,OACyCC,EADzC,YAC4DK,EAD5D,gBAEUb,EAFV,OAEmBS,EAFnB,UAIA,oBAAG9B,UAAWC,IAAO4C,OAArB,yBACerB,EADf,KACsBC,EADtB,a,qBC/BFqB,EAAU,mCACVC,EAAW,0C,SAEFC,E,8EAAf,WAAyBC,GAAzB,iBAAAC,EAAA,+EAE2BC,IAAMC,IAAIH,GAFrC,uBAEY7B,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,sCAKU,IAAIiC,MAAJ,MALV,0D,sBASO,ICdDC,EACE,UADFA,EAEI,UAFJA,EAGC,UAGA,SAASC,EAAiB5B,GAC/B,GAAIA,IAAS,GACX,OAAO2B,EAET,GAAI3B,GAAQ,IAAMA,EAAO,GAAI,CAC3B,IAAM6B,EAAUC,GAAuB,GAAI9B,GAC3C,OAAO+B,EAAeJ,EAAoBA,EAAsBE,GAElE,GAAa,KAAT7B,EACF,OAAO2B,EAET,GAAI3B,EAAO,IAAMA,EAAO,GAAI,CAC1B,IAAM6B,EAAUC,EAAsB,GAAI9B,GAC1C,OAAO+B,EAAeJ,EAAsBA,EAAmBE,GAEjE,OAAI7B,GAAQ,GACH2B,OADT,EAKF,SAASI,EAAeC,EAAYC,EAAaJ,GAK/C,IAJA,IAAMK,EAAWC,EAAsBH,GACjCI,EAAYD,EAAsBF,GAElCI,EAAS,GACNC,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IAAK,CACxC,IAAME,EAAWN,EAASI,IAAMF,EAAUE,GAAKJ,EAASI,IAAMT,EACxDY,EAAWC,KAAKC,MAAMH,GAAUI,SAAS,IAAIC,SAAS,EAAG,KAC/DR,EAAOS,KAAKL,GAGd,MAAO,IAAMJ,EAAOU,KAAK,IAG3B,SAASZ,EAAsBa,GAC7B,OAAOA,EACJC,MAAM,GACNC,MAAM,WACNC,KAAI,SAAAhF,GAAC,OAAIiF,SAASjF,EAAG,OAG1B,SAAS2D,EAAsBuB,EAASC,GACtC,OAAQA,EAAcD,GAAW,G,oBCjCpB,SAASE,IACtB,MAAsCvF,mBAAS,GAA/C,mBAAOwF,EAAP,KAAoBC,EAApB,KACA,EAAsCzF,mBAAS,IAA/C,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAA0B3F,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAsC7F,mBAAS,IAA/C,mBAAO8F,EAAP,KAAoBC,EAApB,KAEA,EAAgCC,cAAxBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAmClB,OAjCAC,qBAAU,WACHF,GAGL,sBAAC,gCAAA1C,EAAA,+EFbiC1B,EEgB5BoE,EFhBiCnE,EEiBjCoE,EFhBD7C,EAAU,GAAD,OACXD,EADW,wBACavB,EADb,gBACwBC,EADxB,kBACqCqB,EADrC,kBEYb,gBAEWpB,EAFX,EAEWA,KAAMO,EAFjB,EAEiBA,QAIdmD,EAAef,KAAKC,MAAM5C,EAAKC,OAC/B2D,EAAerD,EAAQ,GAAGI,MAP7B,kDASG0D,QAAQC,IAAR,MATH,kCFbgC,IAACxE,EAAKC,IEatC,oBAAD,KAYC,CAACmE,EAAUC,IAEdC,qBAAU,WACHP,EAAMU,OAIX,sBAAC,8BAAA/C,EAAA,+EF1BkCgD,EE4BgBX,EF3B9CvC,EAAU,GAAD,OACXD,EADW,mBACQmD,EADR,kBAC0BpD,EAD1B,kBEyBb,gBAEWqD,EAFX,EAEWA,KACRT,EAAeS,GAHlB,gDAKGJ,QAAQC,IAAR,MALH,kCF1BkC,IAAAE,IE0BlC,mBAAD,GAHER,EAAe,MAWhB,CAACH,IAGF,sBACEvF,UAAS,UAAKC,IAAOyB,KAAZ,aAAqB+D,EAAYvB,QAAUjE,IAAOmG,YAC3DC,MAAO,CACLC,gBAAiB/C,EAAiB4B,IAHtC,SAME,gCACE,cAAC,EAAD,CAAWzF,SAAU8F,IACpBI,GAAYP,IAAgBI,EAAYvB,QACvC,qBAAKlE,UAAWC,IAAOsG,aAAvB,SACE,qBACE/D,IAAG,4CAAuC6C,EAAvC,WACH5C,IAAI,eACJzC,UAAU,QAIdyF,EAAYvB,QACZ,cAACrD,EAAD,CAAaL,MAAO2E,EAAa7E,SAAU8E,MAE1CK,EAAYvB,QACb,oBAAIlE,UAAWC,IAAOkG,KAAtB,SACGV,EAAYX,KAAI,SAAA1D,GAAI,OACnB,cAACD,EAAD,CAAUC,KAAMA,GAAWA,EAAKoF,c,MC1E9CC,IAASC,OAAO,cAACxB,EAAD,IAASyB,SAASC,eAAe,U,kBCLjDrH,EAAOC,QAAU,CAAC,KAAO,uBAAuB,WAAa,6BAA6B,YAAc,gC,kBCAxGD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,kBCAvMD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,WAAa,wBAAwB,aAAe,0BAA0B,KAAO,qB","file":"static/js/main.e002d624.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SliderInput_input__1FR1M\"};","import { useState } from 'react';\r\n\r\nimport styles from './Searchbar.module.scss';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const onInputChange = e => {\r\n    setSearchQuery(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(searchQuery);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.SearchForm}>\r\n      <button type=\"submit\" className={styles.SearchFormButton}>\r\n        <span className={styles.SearchFormButtonLabel}>Search</span>\r\n      </button>\r\n      <input\r\n        onChange={onInputChange}\r\n        value={searchQuery}\r\n        className={styles.SearchFormInput}\r\n        name=\"searchQuery\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nimport styles from './SliderInput.module.scss';\r\n\r\nexport default function SliderInput({ value, onChange }) {\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type=\"range\"\r\n      name=\"temparature\"\r\n      value={value}\r\n      onChange={e => onChange(Number(e.target.value))}\r\n      min=\"-20\"\r\n      max=\"40\"\r\n      step=\"1\"\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport styles from './ListItem.module.scss';\r\n\r\nexport default function ListItem({ data }) {\r\n  const {\r\n    name,\r\n    clouds: { all },\r\n    coord: { lat, lon },\r\n    main: { temp, temp_min, temp_max, pressure },\r\n    sys: { country },\r\n    weather,\r\n    wind: { speed },\r\n  } = data;\r\n  const { description, icon } = weather[0];\r\n\r\n  return (\r\n    <li className={styles.item}>\r\n      <div className={styles.imgWrapper}>\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          alt=\"weather-icon\"\r\n          className=\"\"\r\n        />\r\n      </div>\r\n      <div className={styles.textWrapper}>\r\n        <p className={styles.title}>\r\n          {name}, {country} {description}\r\n        </p>\r\n        <p className={styles.weatherText}>\r\n          {temp} temperature from {temp_min} to {temp_max} C, wind {speed} m/s.\r\n          clouds {all} %, {pressure} hpa\r\n        </p>\r\n        <p className={styles.coords}>\r\n          Geo coords [{lat}, {lon}]\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '441d58bab7b086fba70a85b8a02758d0';\r\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\r\n\r\nasync function fetchData(url) {\r\n  try {\r\n    const { data } = await axios.get(url);\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n}\r\n\r\nexport const fetchForecastByCoords = (lat, lon) => {\r\n  return fetchData(\r\n    `${BASE_URL}/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`,\r\n  );\r\n};\r\n\r\nexport const fetchForecastByCityName = cityName => {\r\n  return fetchData(\r\n    `${BASE_URL}/find?q=${cityName}&appid=${API_KEY}&units=metric`,\r\n  );\r\n};\r\n","const tempColorData = {\r\n  cold: '#00ffff',\r\n  normal: '#fff700',\r\n  hot: '#ff8c00',\r\n};\r\n\r\nexport function getColorFromTemp(temp) {\r\n  if (temp <= -10) {\r\n    return tempColorData.cold;\r\n  }\r\n  if (temp > -10 && temp < 10) {\r\n    const percent = getPercentFromTwoTemp(-10, temp);\r\n    return mixTwoHexColor(tempColorData.cold, tempColorData.normal, percent);\r\n  }\r\n  if (temp === 10) {\r\n    return tempColorData.normal;\r\n  }\r\n  if (temp > 10 && temp < 30) {\r\n    const percent = getPercentFromTwoTemp(10, temp);\r\n    return mixTwoHexColor(tempColorData.normal, tempColorData.hot, percent);\r\n  }\r\n  if (temp >= 30) {\r\n    return tempColorData.hot;\r\n  }\r\n}\r\n\r\nfunction mixTwoHexColor(firstColor, secondColor, percent) {\r\n  const firstRgb = getRgbArrFromHexColor(firstColor);\r\n  const secondRgb = getRgbArrFromHexColor(secondColor);\r\n\r\n  const result = [];\r\n  for (let i = 0; i < firstRgb.length; i++) {\r\n    const mixedRgb = firstRgb[i] + (secondRgb[i] - firstRgb[i]) * percent;\r\n    const mixedHex = Math.floor(mixedRgb).toString(16).padStart(2, '0');\r\n    result.push(mixedHex);\r\n  }\r\n\r\n  return '#' + result.join('');\r\n}\r\n\r\nfunction getRgbArrFromHexColor(hex) {\r\n  return hex\r\n    .slice(1)\r\n    .match(/.{1,2}/g)\r\n    .map(e => parseInt(e, 16));\r\n}\r\n\r\nfunction getPercentFromTwoTemp(minTemp, currentTemp) {\r\n  return (currentTemp - minTemp) / 20;\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport useGeolocation from 'react-hook-geolocation';\n\nimport Searchbar from '../Searchbar/Searchbar';\nimport SliderInput from '../SliderInput/SliderInput';\nimport ListItem from '../ListItem/ListItem';\n\nimport {\n  fetchForecastByCityName,\n  fetchForecastByCoords,\n} from '../../utils/apiServices';\nimport { getColorFromTemp } from '../../utils/functions';\n\nimport styles from './App.module.scss';\n\nexport default function App() {\n  const [temparature, setTemparature] = useState(0);\n  const [weatherIcon, setWeatherIcon] = useState('');\n  const [query, setQuery] = useState('');\n  const [countryData, setCountryData] = useState([]);\n\n  const { latitude, longitude } = useGeolocation();\n\n  useEffect(() => {\n    if (!latitude) {\n      return;\n    }\n    (async () => {\n      try {\n        const { main, weather } = await fetchForecastByCoords(\n          latitude,\n          longitude,\n        );\n        setTemparature(Math.floor(main.temp));\n        setWeatherIcon(weather[0].icon);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [latitude, longitude]);\n\n  useEffect(() => {\n    if (!query.trim()) {\n      setCountryData([]);\n      return;\n    }\n    (async () => {\n      try {\n        const { list } = await fetchForecastByCityName(query);\n        setCountryData(list);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [query]);\n\n  return (\n    <main\n      className={`${styles.main} ${!countryData.length && styles.mainCenter}`}\n      style={{\n        backgroundColor: getColorFromTemp(temparature),\n      }}\n    >\n      <div>\n        <Searchbar onSubmit={setQuery} />\n        {latitude && weatherIcon && !countryData.length && (\n          <div className={styles.imageWrapper}>\n            <img\n              src={`https://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\n              alt=\"weather-icon\"\n              className=\"\"\n            />\n          </div>\n        )}\n        {!countryData.length && (\n          <SliderInput value={temparature} onChange={setTemparature} />\n        )}\n        {!!countryData.length && (\n          <ul className={styles.list}>\n            {countryData.map(data => (\n              <ListItem data={data} key={data.id} />\n            ))}\n          </ul>\n        )}\n      </div>\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport './styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ListItem_item__3iabc\",\"imgWrapper\":\"ListItem_imgWrapper__1tGTk\",\"textWrapper\":\"ListItem_textWrapper__3hFMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__1UTi-\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1AAJA\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3Ntwd\",\"SearchFormInput\":\"Searchbar_SearchFormInput__4MU_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__25de_\",\"mainCenter\":\"App_mainCenter__1ni6m\",\"imageWrapper\":\"App_imageWrapper__rJbUX\",\"list\":\"App_list__3L2k3\"};"],"sourceRoot":""}